@import url("https://fonts.googleapis.com/css2?family-Barlow+Semi+Condensed:wght@600:700&display=swap");

:root {
    --light-text: #ffffff;
    --dark-text: hsl(229, 25%, 31%);
    --score-text: hsl(229, 64%, 46%);
    --outline: hsl(217, 16%, 45%);
    --bg-grad-1: hsl(199, 69%, 29%);
    --bg-grad-2: hsl(198, 58%, 10%);
    --scissors-1: hsl(39, 89%, 49%);
    --scissors-2:hsl(40, 67%, 76%);
    --paper-1: hsl(230, 89%, 62%);
    --paper-2: hsl(230, 67%, 76%);
    --rock-1: hsl(349, 71%, 52%);
    --rock-2: hsl(350, 67%, 76%);
    --shadow-light: #00000026;
    --shadow-med: #0000004d;
}
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}
body {
    font-family: 'Barlow Semi Condensed', sans-serif;
    background: radial-gradient(at top, var(--bg-grad-1), var(--bg-grad-2));
    min-height: 100vh;
    text-transform: uppercase;
    color: var(--light-text);
}
.container {
    position: relative;
    max-width: 700px;
    margin: 0 auto;
    padding-top: 2rem;
}
.header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    height: 150px;
    border: 3px solid var(--outline);
    border-radius: 20px;
    padding: 1rem 1.4rem 1rem 2rem;
}
.logo img {
    height: 100%;
}
.logo{
    width: 150px;
}
.score {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content:center;
    background: #fff;
    border-radius: 10px;
    width: 150px;
    height: 100%;
    line-height: 1;
}
.score_title {
    font-size: 1.1rem;
    letter-spacing: 0.1em;
    color: var(--score-text);
}
.score_number {
    font-size: 4rem;
    font-weight: 700;
    color: var(--dark-text);
}
.game {
    position: relative;
    display: grid;
    grid-template-columns: (repeat(2, 1fr));
    grid-template-areas: 
        "paper scissors"
        "rock rock";
    place-items: center;
    height: 30rem;
    padding-top: 4rem;
}
.game::before {
    content: "";
    position: absolute;
    width: 100%;
    height: 100%;
    left: 28%;
    top: 35%;
    background: url(./img/bg-triangle.svg) no-repeat;
    z-index: -1;
}
.choice-btn {
    border: none;
    outline: none;
    background: none;
    cursor: pointer;
}
.choice {
    position: relative;
    width: 10rem;
    height: 10rem;
    background: #fff;
    border-radius: 50%;
    display: grid;
    place-items: center;
    box-shadow: inset 0 0.5rem var(--shadow-light);
}
.choice::before,
.choice::after {
    content: "";
    position: absolute;
    left: -5%;
    top: -5%;
    width: 110%;
    height: 110%;
    border-radius: 50%;
    z-index: -1;
}
.choice-btn:focus .choice::after {
    opacity: 0.4;
    box-shadow: 0 0 0 0.5rem #f3b0b05b;
    z-index: -2;
}
.choice::after {
    opacity: 0;
    transition: opacity 0.4s ease;
}
.choice img {
    transform: scale(1.5)
}
.choice.paper::before {
    background: linear-gradient(to bottom, var(--paper-1), var(--paper-2));
    box-shadow: 0 0.5rem var(--shadow-med) , 0 0.5rem var(--paper-2);
}
.choice.scissors::before {
    background: linear-gradient(to bottom, var(--scissors-1), var(--scissors-2));
    box-shadow: 0 0.5rem var(--shadow-med) , 0 0.5rem var(--scissors-2);
}
.choice.rock::before {
    background: linear-gradient(to bottom, var(--rock-1), var(--rock-2));
    box-shadow: 0 0.5rem var(--shadow-med) , 0 0.5rem var(--rock-2);
}
.choice-btn[data-choice="paper"] {
    grid-area: paper;
}.choice-btn[data-choice="scissors"] {
    grid-area: scissors;
}.choice-btn[data-choice="rock"] {
    grid-area: rock;
}
.results {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    place-items: center;
    grid-template-areas: 
        "you-title ai-title"
        "you-picked ai-picked";
    max-width: 1000px;
    margin: 0 auto;
}
.results_heading {
    font-size: 1.5rem;
    letter-spacing: 0.1em;
    padding: 4rem 0 8rem;
}
.results_result {
    min-width: 10rem;
    min-height: 10rem;
    border-radius: 50%;
    transform: scale(1.4);
    z-index: -1;
}
.results_heading:first-of-type {
    grid-area: you-title;
}
.results_heading:last-of-type {
    grid-area: ai-title;
}
.results_result:first-of-type {
    grid-area: you-picked;
}
.results_result:last-of-type {
    grid-area: ai-picked;
}
.results.show-winner {
    grid-template-columns: repeat(3, 1fr);
    grid-template-areas: 
        "you-title . ai-title"
        "you-picked result-winner ai-picked";
}
.choice {
    animation: winner 1s ease forwards;
}
@keyframes winner {
    from {
        transform: scale(0.5)
    }
    to {
        transform: scale(0.8)
    }
}
.choice:hover {
    animation: winner1 1s ease forwards;
}
@keyframes winner1 {
    from {
        transform: scale(0.8)
    }
    to {
        transform: scale(0.7)
    }
}
.results_winner{
    grid-area: result-winner;
    display: grid;
    place-items: center;
}
.results_text{
    font-size: 3.5rem;
    padding-bottom: 1.5rem;
}
.hidden{
    display: none;
}
